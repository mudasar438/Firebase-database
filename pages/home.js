import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {app, database} from '../firebaseConfig'
import { useEffect } from 'react'
import  {useRouter}  from 'next/router'
import { collection ,  addDoc, getDocs, doc ,updateDoc, deleteDoc} from 'firebase/firestore'
import { useState } from 'react'

import { async } from '@firebase/util'

export default function Home() {
  const [iD, setID] = useState(null)

  const [name, setName] = useState('')
  const [age, setAge] = useState(null)
  const [isupdate, setIsUpdate]=useState(false)
  const [firedata, setFireData] = useState([])

  const databaseRef = collection(database, "CRUD DATA")
  const router = useRouter();

  useEffect(()=>{

    let token =  sessionStorage.getItem("Token")
    if(token){
      getData();
    }
    if(!token){
        router.push('/register')
    }
}, [])


// set data into Firbase database 
const addData = ()=>{
  addDoc(databaseRef, {
    name:name,
    age:Number(age),
  })
  .then(()=>{
    alert("Data add Into Firestore Database")
    getData()
    setName("")
    setAge(null)
  })
  .catch((err)=>{
    console.error(err.message)
  })

}
// GEt DAta from firebase Database

const getData = async()=>{

  await getDocs(databaseRef)
.then ((response)=>{
  setFireData(response.docs.map((item)=>{
    return (
      {...item.data(), id:item.id}
    )
  }))
})
}

//updata database

const update = (id, name, age)=>{
console.log(id, age, name)
setID(id)
  setName(name);
  setAge(age);
  setIsUpdate(true)
  
  // console.log(id)
  

}
const updateFields = ()=>{
  let updateid = doc(database, 'CRUD DATA', iD)
  updateDoc(updateid, {
    name:name,
    age:age,

  })
  .then(()=>{
    alert("Updates Completes")
    getData()
    setName('')
    setAge(null)
    setIsUpdate(false)
  })
  .catch((err)=>{
    console.log(err.message)
  })

}
// delete data form firebase data store
const del = (id)=>{
  let updateid = doc(database, 'CRUD DATA', id)
  deleteDoc(updateid)
  .then(()=>{
    alert("Delete Data Item")
  })
  .catch((err)=>{
    console.log(err.message)

  })

}

const logout = ()=>{
  sessionStorage.removeItem('Token')
  // this.auth.signOut();
  router.push('/register')
}
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button className={styles.signup} onClick={logout}>Logout</button>
        <h1 className={styles.header}>Home</h1>
        <input type="text" placeholder='Enter Your Name' value={name} className={styles.inputBox} onChange={(event) => setName(event.target.value)}/>
        <input type="number" placeholder='Enter Age'value={age} className={styles.inputBox} onChange={(event)=> setAge(event.target.value)} />
       
        {isupdate ? ( <button className={styles.signup} onClick={updateFields}>UPDATE</button>):
        ( <button className={styles.signup} onClick={addData}>Submit</button>)}


        <button className={styles.signup} onClick={getData}> Show Data</button>


        <div className=" ">
          {
            firedata.map((item)=>{

              return(
                <div className='' key={item.id}>
                  <ul className={styles.items}> 
                    <li>
                      <p>Name:{item.name} Age: {item.age} <button 
                      onClick={()=>update(item.id, item.name, item.age)}
                      >Update</button> <button onClick={()=>del(item.id)}>Delete</button></p>
                     
                    </li>
                    
                    
                    </ul>
                </div>



              )

            })
          }
         
        </div>
      </main>

    </div>
  )
}
